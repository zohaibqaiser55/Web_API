let User,pick;_e9a‍.x([["default",()=>_e9a‍.o]]);_e9a‍.w("./user.model",[["User",["User"],function(v){User=v}]]);_e9a‍.w("lodash.pick",[["default",["pick"],function(v){pick=v}]]);/**import User model */



/**create the user controller */
const userController ={
 async createUser(req, res) {
    try{
        let user = new (_e9a‍.a("User",User))(_e9a‍.a("pick",pick)(req.body, ['email','password']))
        await user.save()
        res.status(201).send(user)
    }catch(error){
        res.status(400).send(error)}
 },
 
 
 async getUser(req, res){
     try{
        const result = await _e9a‍.a("User",User).find().sort('createdAt')
        res.status(200).send(result)
    }catch(error){
        res.status(400).send(error)
    }
 },

  async updateUser(req, res){
     try{
        const user = await _e9a‍.a("User",User).findByIdAndUpdate(req.params.id, req.body, {new : true })
        res.status(200).send(user)
    }catch(error){
        res.status(400).send(error)
    }
},

  async deleteUser(req, res){
     try{
        const user = await _e9a‍.a("User",User).delete({ _id: req.params.id })
        res.status(200).send(user)
    }catch(error){
        res.status(400).send(error)
        }

    },

  async getProfile(req, res){ 
      try{
        const user = await _e9a‍.a("User",User).findByid(req.parms.id )
        if(!user){
            return res.status(404).send('User not found')
        }
        res.status(200).send(user)
    }catch(error){
        res.status(400).send(error)
    }
  },

  async getDashboard(req, res){}


}
/**export controller */
_e9a‍.d(userController);_e9a‍.j(["default"]);